% !TeX program = lualatex

% This is meant to be used with document class 'article' or 'beamer'.

\ProvidesPackage{préambule}

\usepackage{kvoptions}
\usepackage{kvoptions-patch}
\usepackage{ifthen}

% ===============
% PACKAGE OPTIONS
% ===============
\SetupKeyvalOptions{
	family=PreambuleOptions,
	prefix=PreambuleOptions@
}
\DeclareBoolOption[false]{nofigures}
\ProcessKeyvalOptions*

\makeatletter

% ==============
% PACKAGE IMPORT
% ==============
\usepackage{fontspec}           % Pour changer la police
\setmainfont[Ligatures=TeX]{DejaVuSans} % Police avec support pour l'UTF-8
\usepackage[math-style=french,sans-style=upright]{unicode-math}       % Symboles unicodes en mode math
\setmathfont{TeX Gyre DejaVu Math}
\setmathfont{Latin Modern Math}[range=it/{latin},Scale=MatchLowercase] % lettres minuscule en cursif
\setmathfont{Latin Modern Math}[range=up/{greek},Scale=MatchLowercase] % lettres grecques minuscule en cursif
\setmathfont{Noto Sans Math}[range={up/{num},bfup/{num}}] % Nombre en sans serif.
\usepackage{sourcecodepro}    % Police à chasse fixe
\usepackage[french]{babel}    % françisation partielle de l'output
\DecimalMathComma
\usepackage{amsthm}             % maths
\usepackage{amsmath}            % maths
\usepackage{graphicx}           % figures
\usepackage{titlesec}           % permet de changer l'affichage des sections et autres
\usepackage{color}              % couleurs rgb
\ifboolexpr{test    {\@ifclassloaded{article}}
            or test {\@ifclassloaded{book}}}
{
\usepackage[dvipsnames,table]{xcolor} % plus de couleurs
}
{\usepackage{xcolor}}
\ifPreambuleOptions@nofigures
\else
\usepackage{pgfplots}
\usepackage{pgf-pie}
\pgfplotsset{compat=1.16}
\usepackage[tikz]{mdframed}     % boites fancy autour des théorèmes et autres
\usetikzlibrary{shadows}        % effet d'ombre sur les boites ('shadow = true')
\usetikzlibrary{arrows.meta}    % Flèche \myArrow 
\fi
\usepackage{ulem}               % Pour souligner
\usepackage{nopageno}           % pas de numéros de page
\usepackage[makeroom]{cancel}   % texte barré
\usepackage{multicol}           % avoir le texte en plusieurs colonnes
\usepackage{caption}            % Custom image captions
\usepackage{floatrow}           % ??? plusieurs images côte à côte
\usepackage[thinlines]{easytable} % Table plus faciles à utiliser (environnement TAB)
\ifboolexpr{test    {\@ifclassloaded{article}}
            or test {\@ifclassloaded{book}}}
{
\usepackage[shortlabels]{enumitem}           % Pour facilement modifier les listes.
}
{}
\usepackage{tabularx} % meileurs tableaux
\usepackage{luacode} % \begin{luacode} ... \end{luacode}
\usepackage{wrapfig} % Texte autour d'images
\usepackage{awesomebox} % Diverse boites de texte
\usepackage{fontawesome} % Icône web (via \faicon{...})

\setlength{\parindent}{0pt} % Pas d'indentation implicite des paragraphes.

% Symboles des listes
\ifboolexpr{test    {\@ifclassloaded{article}}
            or test {\@ifclassloaded{book}}}
{
\setlist[itemize,1]{label=•}
\setlist[itemize,2]{label=◦}
\setlist[itemize,3]{label=■}
\setlist[itemize,4]{label=□}
}{}

% 'require' ne fonctionne pas bien...

\begin{luacode}
	local myrequireclone = require
	function require(module)
		return myrequireclone(package.searchpath(module, package.path))
	end
\end{luacode}

% Définition des théorèmes, remarques...

\definecolor{myred}{RGB}{220, 20, 20}
\definecolor{mygreen}{RGB}{0, 170, 40}
\definecolor{myblue}{RGB}{0, 0, 100}

% =======================
% ENVIRONMENT DEFINITIONS
% =======================
\ifPreambuleOptions@nofigures
\else

\mdfdefinestyle{boxstyle}{
    linecolor=black!70,
    linewidth=1pt,
    leftmargin=12,
    innertopmargin=\topskip,
}

\mdfdefinestyle{importantstyle}{
	linecolor=gray!60,
    linewidth=1pt,
	frametitlebackgroundcolor=gray!20,
    frametitlerule=true,
    frametitlerulewidth=1pt,
	roundcorner=5pt,
    innertopmargin=\topskip,
}

\mdfdefinestyle{importantshadowstyle}{
	style=importantstyle,
    shadow=true,
}

\mdfdefinestyle{redstyle}{
	style=importantshadowstyle,
    frametitlefontcolor=myred,
    frametitlerulecolor=myred!50,
}

\mdfdefinestyle{bluestyle}{
	linecolor=black!70,
    linewidth=1pt,
    backgroundcolor=gray!0,
    frametitlefontcolor=myblue,
    frametitlebackgroundcolor=gray!10,
    frametitlerulecolor=black!30,
	topline=false,
    bottomline=false,
    rightline=false,
    leftmargin=12,
    innertopmargin=\topskip,
}

\mdfdefinestyle{greenstyle}{
	linecolor=gray!60,
    linewidth=1pt,
    frametitlefontcolor=mygreen,
	frametitlebackgroundcolor=gray!20,
    frametitlerule=true,
    frametitlerulewidth=1pt,
    frametitlerulecolor=mygreen!50,
	roundcorner=5pt,
    leftmargin=12,
    innertopmargin=\topskip,
}

\mdfdefinestyle{enoncestyle}{
    style=greenstyle,
    frametitle={Énoncé},
}

\mdfdefinestyle{applicationstyle}{
    style=bluestyle,
    frametitle={Application},
}

\mdfdefinestyle{greyboxstyle}{
	style=boxstyle,
    frametitlebackgroundcolor=gray!10,
    frametitlerulecolor=black!30,
    topline=false,
    bottomline=false,
    rightline=false,
}

\mdfdefinestyle{paleboxstyle}{
    frametitlebackgroundcolor=gray!10,
    frametitlerulecolor=black!30,
	leftline=false,
    topline=false,
    bottomline=false,
    rightline=false,
    leftmargin=20,
    innertopmargin=\topskip,
}

\newmdenv[style=enoncestyle]{enonce}
\newmdenv[style=redstyle]{attention}
\newmdenv[style=boxstyle]{mybox}
\newmdenv[style=greyboxstyle]{greybox}
\newmdenv[style=paleboxstyle]{palebox}

%Titre optionel pour les blocks 'Énoncé'
\let\orig@enonce=\enonce
\def\enonce{
  \@ifnextchar[{\enonce@opt}{\orig@enonce}
}
\def\enonce@opt[#1]{
  \orig@enonce[frametitle={Énoncé : #1}]
}

\fi

% théorème qui souligne son titre.
\newtheoremstyle{underline_theorem_style}
	{\topsep} % espace avant
	{\topsep} % espace après
	{} % Police utilisee par le style de thm
	{} % Indentation (vide = aucune, \parindent = indentation paragraphe)
	{\bfseries}% Police du titre de thm
	{.} % Signe de ponctuation apres le titre du thm
	{ }% Espace apres le titre du thm (\newline = linebreak)
	{\uline{\thmname{#1}\thmnumber{ #2}\thmnote{ \normalfont{\textbf{#3}}}}}% composants du titre du thm : \thmname = nom du thm, \thmnumber = numéro du thm, \thmnote = sous-titre du thm

\theoremstyle{underline_theorem_style}
\newtheorem{question}{Question}
\newtheorem*{question*}{Question}
\newtheorem{exercice}{Exercice}
\newtheorem*{exercice*}{Exercice}

% ========================
% COMMANDES ADDITIONNELLES
% ========================

\newcommand{\somme}[2]{\overset{#2}{\underset{#1}{\sum}}}
\newcommand{\produit}[2]{\overset{#2}{\underset{#1}{\prod}}}
\newcommand{\sommedirecte}[2]{\overset{#2}{\underset{#1}{\oplus}}}
\renewcommand*{\proofname}{Preuve}
\begin{luacode}
	function make_vec(arg)
		if string.len(arg) <= 1 then
			tex.print("\\oldvec{", arg, "}")
		else
			tex.print("\\overrightarrow{", arg, "}")
		end
	end
\end{luacode}
\let\oldvec\vec
\renewcommand{\vec}[1]{%
\directlua{make_vec("\luatexluaescapestring{\unexpanded{#1}}")}%
}

\newcommand{\intervalle}[4]{\left#1 #2;#3\right#4}

\ifPreambuleOptions@nofigures
\else
% Pour entourer un nombre
\newcommand*\circled[2][transparent]{\tikz[baseline=(char.base)]{
            \node[shape=circle,draw=#1,inner sep=2pt] (char) {#2};}}

% Pour entourer un nombre par un carré.
% On peut optionnelement spécifier la couleur de contour et de fond.
\NewDocumentCommand{\squared}{O{transparent}O{white}m}{%
\tikz[baseline=(char.base)]{%
\node[shape=rectangle,draw=#1,fill=#2,inner sep=2pt] (char) {#3};}%
}

% Pour faire un cadre
\newcommand{\squareFrame}[2][]{%
\tikz[baseline=(char.base)]{%
\ifthenelse{\equal{#1}{noshadow}}{%
	\node[shape=rectangle,fill=white,draw] (char) {#2};%
}{%
	\node[shape=rectangle,fill=white,draw,drop shadow] (char) {#2};%
}}}

\newcommand{\myArrow}{-{Latex[length=3mm, width=2mm]}}
\fi

% Enlève l'espace après la virgule en mode maths
\thinmuskip=0mu

\newcommand{\correction}[1]{
\ifdefined\makeCorrection
	{\color{red}#1}
\else
	\phantom{#1}
\fi
}
\newcommand{\correctionOr}[2]{
\ifdefined\makeCorrection
	#1
\else
	#2
\fi
}
\newbox\correctionDotsBox
\newbox\correctionDotsPoint
\newlength\pointwd
\setbox\correctionDotsPoint=\hbox{.}
\newcommand{\correctionDots}[1]{
\ifdefined\makeCorrection
	{\color{red}#1}
\else
\ifx\@empty#1\@empty%
\fi%
\noindent
\leavevmode%
	\ifmmode\savebox\correctionDotsBox{$#1$}%
	\else\savebox{\correctionDotsBox}{#1}%
	\fi%
	\setlength\pointwd{0pt}%
\loop%
	\ifdim\pointwd<\wd\correctionDotsBox%
	\rule{0pt}{\baselineskip}\usebox{\correctionDotsPoint}\hskip-\fboxrule %
	\advance\pointwd by 0.6\wd\correctionDotsPoint %coefficient à ajuster 
\repeat%
\fi
}

\makeatother